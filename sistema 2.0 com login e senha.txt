<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Solaris PRO - Gestão para Óticas</title>
    <style>
        :root {
            --primary: #0071e3;
            --primary-dark: #0062c4;
            --secondary: #f5f5f7;
            --text: #1d1d1f;
            --text-light: #86868b;
            --success: #34c759;
            --warning: #ff9500;
            --danger: #ff3b30;
            --white: #ffffff;
            --border-radius: 12px;
            --box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
            --transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
        }

        body {
            background-color: var(--secondary);
            color: var(--text);
            line-height: 1.6;
        }

        /* Login Screen */
        .login-container {
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            background-color: var(--secondary);
        }

        .login-card {
            background-color: var(--white);
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
            padding: 40px;
            width: 100%;
            max-width: 400px;
            text-align: center;
            animation: fadeIn 0.8s ease-out;
        }

        .login-logo {
            margin-bottom: 30px;
        }

        .login-logo i {
            font-size: 48px;
            color: var(--primary);
        }

        .login-logo h1 {
            margin-top: 15px;
            color: var(--primary);
            font-weight: 600;
        }

        /* Main App Styles */
        .app-container {
            display: grid;
            grid-template-columns: 240px 1fr;
            min-height: 100vh;
        }

        /* Sidebar Styles */
        .sidebar {
            background-color: var(--white);
            box-shadow: var(--box-shadow);
            padding: 20px 0;
            position: relative;
            z-index: 10;
        }

        .logo {
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 0 20px 20px;
            border-bottom: 1px solid rgba(0, 0, 0, 0.05);
            margin-bottom: 20px;
        }

        .logo img {
            height: 40px;
            margin-right: 10px;
        }

        .logo h1 {
            font-size: 20px;
            font-weight: 600;
            color: var(--primary);
        }

        .nav-menu {
            list-style: none;
        }

        .nav-item {
            margin: 5px 0;
        }

        .nav-link {
            display: flex;
            align-items: center;
            padding: 12px 20px;
            color: var(--text-light);
            text-decoration: none;
            transition: var(--transition);
            border-left: 4px solid transparent;
        }

        .nav-link:hover {
            background-color: rgba(0, 113, 227, 0.05);
            color: var(--primary);
        }

        .nav-link.active {
            background-color: rgba(0, 113, 227, 0.1);
            color: var(--primary);
            border-left-color: var(--primary);
        }

        .nav-link i {
            margin-right: 12px;
            font-size: 18px;
        }

        /* Main Content Styles */
        .main-content {
            padding: 30px;
            overflow-y: auto;
        }

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
        }

        .page-title {
            font-size: 28px;
            font-weight: 600;
        }

        .user-menu {
            display: flex;
            align-items: center;
        }

        .user-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background-color: var(--primary);
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-left: 15px;
            cursor: pointer;
        }

        /* Dashboard Cards */
        .dashboard-cards {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            gap: 20px;
            margin-bottom: 30px;
        }

        .card {
            background-color: var(--white);
            border-radius: var(--border-radius);
            padding: 20px;
            box-shadow: var(--box-shadow);
            transition: var(--transition);
        }

        .card:hover {
            transform: translateY(-5px);
        }

        .card-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
        }

        .card-title {
            font-size: 14px;
            color: var(--text-light);
            font-weight: 500;
        }

        .card-value {
            font-size: 24px;
            font-weight: 600;
            margin-bottom: 5px;
        }

        .card-change {
            font-size: 12px;
            display: flex;
            align-items: center;
        }

        .card-change.positive {
            color: var(--success);
        }

        .card-change.negative {
            color: var(--danger);
        }

        /* Forms */
        .form-group {
            margin-bottom: 20px;
        }

        .form-label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
        }

        .form-control {
            width: 100%;
            padding: 12px 15px;
            border: 1px solid #ddd;
            border-radius: var(--border-radius);
            font-size: 14px;
            transition: var(--transition);
        }

        .form-control:focus {
            border-color: var(--primary);
            outline: none;
            box-shadow: 0 0 0 3px rgba(0, 113, 227, 0.2);
        }

        .btn {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            padding: 12px 20px;
            border-radius: var(--border-radius);
            font-size: 14px;
            font-weight: 500;
            cursor: pointer;
            transition: var(--transition);
            border: none;
        }

        .btn-primary {
            background-color: var(--primary);
            color: white;
        }

        .btn-primary:hover {
            background-color: var(--primary-dark);
        }

        .btn-outline {
            background-color: transparent;
            border: 1px solid var(--primary);
            color: var(--primary);
        }

        .btn-outline:hover {
            background-color: rgba(0, 113, 227, 0.1);
        }

        /* Table Styles */
        .table {
            width: 100%;
            border-collapse: collapse;
        }

        .table th {
            text-align: left;
            padding: 12px 15px;
            font-weight: 500;
            color: var(--text-light);
            border-bottom: 1px solid rgba(0, 0, 0, 0.05);
        }

        .table td {
            padding: 12px 15px;
            border-bottom: 1px solid rgba(0, 0, 0, 0.05);
        }

        .table tr:last-child td {
            border-bottom: none;
        }

        .status-badge {
            display: inline-block;
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 12px;
            font-weight: 500;
        }

        .status-badge.success {
            background-color: rgba(52, 199, 89, 0.1);
            color: var(--success);
        }

        .status-badge.warning {
            background-color: rgba(255, 149, 0, 0.1);
            color: var(--warning);
        }

        .status-badge.danger {
            background-color: rgba(255, 59, 48, 0.1);
            color: var(--danger);
        }

        /* Modal Styles */
        .modal {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: rgba(0, 0, 0, 0.5);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 1000;
            opacity: 0;
            pointer-events: none;
            transition: var(--transition);
        }

        .modal.active {
            opacity: 1;
            pointer-events: all;
        }

        .modal-content {
            background-color: var(--white);
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
            width: 90%;
            max-width: 800px;
            max-height: 90vh;
            overflow-y: auto;
            padding: 30px;
            transform: translateY(20px);
            transition: var(--transition);
        }

        .modal.active .modal-content {
            transform: translateY(0);
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            padding-bottom: 15px;
            border-bottom: 1px solid rgba(0, 0, 0, 0.05);
        }

        .modal-title {
            font-size: 20px;
            font-weight: 600;
        }

        .modal-close {
            background: none;
            border: none;
            font-size: 24px;
            cursor: pointer;
            color: var(--text-light);
        }

        /* PDF Preview */
        .pdf-preview {
            width: 100%;
            height: 500px;
            border: 1px solid #ddd;
            border-radius: var(--border-radius);
            margin-bottom: 20px;
            background-color: white;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
        }

        .pdf-preview i {
            font-size: 48px;
            color: var(--primary);
            margin-bottom: 15px;
        }

        /* Animations */
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .fade-in {
            animation: fadeIn 0.5s ease-out forwards;
        }

        /* Responsive */
        @media (max-width: 1200px) {
            .dashboard-cards {
                grid-template-columns: repeat(2, 1fr);
            }
        }

        @media (max-width: 768px) {
            .app-container {
                grid-template-columns: 1fr;
            }
            
            .sidebar {
                position: fixed;
                top: 0;
                left: -100%;
                width: 280px;
                height: 100vh;
                transition: var(--transition);
            }
            
            .sidebar.active {
                left: 0;
            }
            
            .dashboard-cards {
                grid-template-columns: 1fr;
            }
        }
    </style>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
</head>
<body>
    <!-- Login Screen (Initially visible) -->
    <div class="login-container" id="loginScreen">
        <div class="login-card">
            <div class="login-logo">
                <i class="fas fa-glasses"></i>
                <h1>Solaris PRO</h1>
            </div>
            <form id="loginForm">
                <div class="form-group">
                    <label for="email" class="form-label">E-mail</label>
                    <input type="email" id="email" class="form-control" placeholder="seu@email.com" required>
                </div>
                <div class="form-group">
                    <label for="password" class="form-label">Senha</label>
                    <input type="password" id="password" class="form-control" placeholder="••••••••" required>
                </div>
                <button type="submit" class="btn btn-primary" style="width: 100%; margin-top: 20px;">
                    <i class="fas fa-sign-in-alt" style="margin-right: 8px;"></i> Entrar
                </button>
            </form>
        </div>
    </div>

    <!-- Main App (Initially hidden) -->
    <div class="app-container" id="appContainer" style="display: none;">
        <!-- Sidebar Navigation -->
        <aside class="sidebar">
            <div class="logo">
                <i class="fas fa-glasses" style="font-size: 24px; color: var(--primary);"></i>
                <h1>Solaris PRO</h1>
            </div>
            <ul class="nav-menu">
                <li class="nav-item">
                    <a href="#dashboard" class="nav-link active" data-page="dashboard">
                        <i class="fas fa-tachometer-alt"></i>
                        <span>Dashboard</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a href="#clientes" class="nav-link" data-page="clientes">
                        <i class="fas fa-users"></i>
                        <span>Clientes</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a href="#estoque" class="nav-link" data-page="estoque">
                        <i class="fas fa-box-open"></i>
                        <span>Estoque</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a href="#vendas" class="nav-link" data-page="vendas">
                        <i class="fas fa-shopping-cart"></i>
                        <span>Vendas</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a href="#agendamentos" class="nav-link" data-page="agendamentos">
                        <i class="fas fa-calendar-alt"></i>
                        <span>Agendamentos</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a href="#laudos" class="nav-link" data-page="laudos">
                        <i class="fas fa-file-medical"></i>
                        <span>Laudos</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a href="#relatorios" class="nav-link" data-page="relatorios">
                        <i class="fas fa-chart-bar"></i>
                        <span>Relatórios</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a href="#configuracoes" class="nav-link" data-page="configuracoes">
                        <i class="fas fa-cog"></i>
                        <span>Configurações</span>
                    </a>
                </li>
            </ul>
        </aside>

        <!-- Main Content -->
        <main class="main-content">
            <!-- Dashboard Page -->
            <div id="dashboard-page" class="page-content">
                <div class="header">
                    <h1 class="page-title">Dashboard</h1>
                    <div class="user-menu">
                        <span id="user-greeting">Olá, Usuário</span>
                        <div class="user-avatar" id="user-avatar">
                            <i class="fas fa-user"></i>
                        </div>
                    </div>
                </div>

                <div class="dashboard-cards">
                    <!-- Cards would be populated by JavaScript -->
                </div>

                <div class="section">
                    <div class="section-header">
                        <h2 class="section-title">Atividade Recente</h2>
                        <a href="#" class="see-all">Ver tudo</a>
                    </div>
                    <ul class="activity-list" id="recent-activity">
                        <!-- Activities would be populated by JavaScript -->
                    </ul>
                </div>

                <div class="section">
                    <div class="section-header">
                        <h2 class="section-title">Clientes Recentes</h2>
                        <a href="#" class="see-all">Ver todos</a>
                    </div>
                    <table class="table" id="recent-clients">
                        <!-- Clients would be populated by JavaScript -->
                    </table>
                </div>
            </div>

            <!-- Clientes Page -->
            <div id="clientes-page" class="page-content" style="display: none;">
                <div class="header">
                    <h1 class="page-title">Clientes</h1>
                    <div class="user-menu">
                        <button class="btn btn-primary" id="add-client-btn">
                            <i class="fas fa-plus" style="margin-right: 8px;"></i> Novo Cliente
                        </button>
                    </div>
                </div>

                <div class="section">
                    <div class="section-header">
                        <h2 class="section-title">Todos os Clientes</h2>
                        <div class="search-box">
                            <input type="text" class="form-control" placeholder="Pesquisar clientes..." id="client-search">
                        </div>
                    </div>
                    <table class="table" id="clients-table">
                        <thead>
                            <tr>
                                <th>Nome</th>
                                <th>CPF</th>
                                <th>Telefone</th>
                                <th>Última Visita</th>
                                <th>Status</th>
                                <th>Ações</th>
                            </tr>
                        </thead>
                        <tbody>
                            <!-- Clients would be populated by JavaScript -->
                        </tbody>
                    </table>
                </div>
            </div>

            <!-- Estoque Page -->
            <div id="estoque-page" class="page-content" style="display: none;">
                <div class="header">
                    <h1 class="page-title">Estoque</h1>
                    <div class="user-menu">
                        <button class="btn btn-primary" id="add-product-btn">
                            <i class="fas fa-plus" style="margin-right: 8px;"></i> Novo Item
                        </button>
                    </div>
                </div>

                <div class="dashboard-cards">
                    <div class="card">
                        <div class="card-header">
                            <span class="card-title">Total de Itens</span>
                            <i class="fas fa-boxes" style="color: var(--primary);"></i>
                        </div>
                        <h3 class="card-value" id="total-items">0</h3>
                    </div>
                    <div class="card">
                        <div class="card-header">
                            <span class="card-title">Valor Total</span>
                            <i class="fas fa-dollar-sign" style="color: var(--success);"></i>
                        </div>
                        <h3 class="card-value" id="total-value">R$ 0,00</h3>
                    </div>
                    <div class="card">
                        <div class="card-header">
                            <span class="card-title">Itens em Falta</span>
                            <i class="fas fa-exclamation-triangle" style="color: var(--danger);"></i>
                        </div>
                        <h3 class="card-value" id="low-stock-items">0</h3>
                    </div>
                </div>

                <div class="section">
                    <div class="section-header">
                        <h2 class="section-title">Todos os Produtos</h2>
                        <div class="search-box">
                            <input type="text" class="form-control" placeholder="Pesquisar produtos..." id="product-search">
                        </div>
                    </div>
                    <table class="table" id="products-table">
                        <thead>
                            <tr>
                                <th>Código</th>
                                <th>Produto</th>
                                <th>Categoria</th>
                                <th>Quantidade</th>
                                <th>Preço</th>
                                <th>Ações</th>
                            </tr>
                        </thead>
                        <tbody>
                            <!-- Products would be populated by JavaScript -->
                        </tbody>
                    </table>
                </div>
            </div>

            <!-- Laudos Page -->
            <div id="laudos-page" class="page-content" style="display: none;">
                <div class="header">
                    <h1 class="page-title">Laudos e Receitas</h1>
                    <div class="user-menu">
                        <button class="btn btn-primary" id="new-prescription-btn">
                            <i class="fas fa-plus" style="margin-right: 8px;"></i> Novo Laudo
                        </button>
                    </div>
                </div>

                <div class="section">
                    <div class="section-header">
                        <h2 class="section-title">Laudos Recentes</h2>
                        <div class="search-box">
                            <input type="text" class="form-control" placeholder="Pesquisar laudos..." id="prescription-search">
                        </div>
                    </div>
                    <table class="table" id="prescriptions-table">
                        <thead>
                            <tr>
                                <th>Número</th>
                                <th>Paciente</th>
                                <th>Data</th>
                                <th>Tipo</th>
                                <th>Ações</th>
                            </tr>
                        </thead>
                        <tbody>
                            <!-- Prescriptions would be populated by JavaScript -->
                        </tbody>
                    </table>
                </div>
            </div>

            <!-- Other pages would follow the same pattern -->
        </main>
    </div>

    <!-- Add Client Modal -->
    <div class="modal" id="client-modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title">Adicionar Novo Cliente</h2>
                <button class="modal-close" id="close-client-modal">&times;</button>
            </div>
            <form id="client-form">
                <div class="form-group">
                    <label for="client-name" class="form-label">Nome Completo</label>
                    <input type="text" id="client-name" class="form-control" required>
                </div>
                <div class="form-group">
                    <label for="client-cpf" class="form-label">CPF</label>
                    <input type="text" id="client-cpf" class="form-control" required>
                </div>
                <div class="form-group">
                    <label for="client-phone" class="form-label">Telefone</label>
                    <input type="tel" id="client-phone" class="form-control" required>
                </div>
                <div class="form-group">
                    <label for="client-email" class="form-label">E-mail</label>
                    <input type="email" id="client-email" class="form-control">
                </div>
                <div class="form-group">
                    <label for="client-birthdate" class="form-label">Data de Nascimento</label>
                    <input type="date" id="client-birthdate" class="form-control">
                </div>
                <button type="submit" class="btn btn-primary">Salvar Cliente</button>
            </form>
        </div>
    </div>

    <!-- Add Product Modal -->
    <div class="modal" id="product-modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title">Adicionar Novo Produto</h2>
                <button class="modal-close" id="close-product-modal">&times;</button>
            </div>
            <form id="product-form">
                <div class="form-group">
                    <label for="product-code" class="form-label">Código</label>
                    <input type="text" id="product-code" class="form-control" required>
                </div>
                <div class="form-group">
                    <label for="product-name" class="form-label">Nome do Produto</label>
                    <input type="text" id="product-name" class="form-control" required>
                </div>
                <div class="form-group">
                    <label for="product-category" class="form-label">Categoria</label>
                    <select id="product-category" class="form-control" required>
                        <option value="">Selecione...</option>
                        <option value="armacao">Armação</option>
                        <option value="lente">Lente</option>
                        <option value="acessorio">Acessório</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="product-quantity" class="form-label">Quantidade</label>
                    <input type="number" id="product-quantity" class="form-control" required>
                </div>
                <div class="form-group">
                    <label for="product-price" class="form-label">Preço</label>
                    <input type="text" id="product-price" class="form-control" required>
                </div>
                <button type="submit" class="btn btn-primary">Salvar Produto</button>
            </form>
        </div>
    </div>

    <!-- Prescription Modal -->
    <div class="modal" id="prescription-modal">
        <div class="modal-content" style="max-width: 1000px;">
            <div class="modal-header">
                <h2 class="modal-title">Novo Laudo/Receita</h2>
                <button class="modal-close" id="close-prescription-modal">&times;</button>
            </div>
            <form id="prescription-form">
                <div class="form-group">
                    <label for="prescription-patient" class="form-label">Paciente</label>
                    <select id="prescription-patient" class="form-control" required>
                        <option value="">Selecione um paciente...</option>
                        <!-- Patients would be populated by JavaScript -->
                    </select>
                </div>
                <div class="form-group">
                    <label for="prescription-type" class="form-label">Tipo de Documento</label>
                    <select id="prescription-type" class="form-control" required>
                        <option value="">Selecione...</option>
                        <option value="receita">Receita Oftalmológica</option>
                        <option value="laudo">Laudo de Exame</option>
                        <option value="atestado">Atestado</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="prescription-date" class="form-label">Data</label>
                    <input type="date" id="prescription-date" class="form-control" required>
                </div>
                <div class="form-group">
                    <label for="prescription-content" class="form-label">Conteúdo</label>
                    <textarea id="prescription-content" class="form-control" rows="10" style="font-family: monospace;"></textarea>
                </div>
                <div class="pdf-preview">
                    <i class="fas fa-file-pdf"></i>
                    <p>Pré-visualização do PDF será gerada aqui</p>
                </div>
                <div style="display: flex; justify-content: space-between;">
                    <button type="button" class="btn btn-outline" id="generate-pdf-btn">
                        <i class="fas fa-file-pdf" style="margin-right: 8px;"></i> Gerar PDF
                    </button>
                    <div>
                        <button type="button" class="btn btn-outline" id="print-prescription-btn" style="margin-right: 10px;">
                            <i class="fas fa-print" style="margin-right: 8px;"></i> Imprimir
                        </button>
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save" style="margin-right: 8px;"></i> Salvar Laudo
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- Firebase and other libraries -->
    <script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-auth.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-firestore.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>

    <script>
        // Firebase configuration
        const firebaseConfig = {
            apiKey: "AIzaSyBA4w0CkCinOMWvQ00K4GVIvv-xPalTyjI",
            authDomain: "solaris-pro-example.firebaseapp.com",
            projectId: "solaris-pro-example",
            storageBucket: "solaris-pro-example.appspot.com",
            messagingSenderId: "123456789012",
            appId: "1:123456789012:web:abc123abc123abc123abc123"
        };

        // Initialize Firebase
        firebase.initializeApp(firebaseConfig);
        const auth = firebase.auth();
        const db = firebase.firestore();

        // Initialize jsPDF
        const { jsPDF } = window.jspdf;

        document.addEventListener('DOMContentLoaded', function() {
            // DOM Elements
            const loginScreen = document.getElementById('loginScreen');
            const appContainer = document.getElementById('appContainer');
            const loginForm = document.getElementById('loginForm');
            const userGreeting = document.getElementById('user-greeting');
            const userAvatar = document.getElementById('user-avatar');
            
            // Page elements
            const pageLinks = document.querySelectorAll('.nav-link[data-page]');
            const pageContents = document.querySelectorAll('.page-content');
            
            // Modals
            const clientModal = document.getElementById('client-modal');
            const productModal = document.getElementById('product-modal');
            const prescriptionModal = document.getElementById('prescription-modal');
            
            // Buttons
            const addClientBtn = document.getElementById('add-client-btn');
            const addProductBtn = document.getElementById('add-product-btn');
            const newPrescriptionBtn = document.getElementById('new-prescription-btn');
            
            // Modal close buttons
            const closeClientModal = document.getElementById('close-client-modal');
            const closeProductModal = document.getElementById('close-product-modal');
            const closePrescriptionModal = document.getElementById('close-prescription-modal');
            
            // Forms
            const clientForm = document.getElementById('client-form');
            const productForm = document.getElementById('product-form');
            const prescriptionForm = document.getElementById('prescription-form');
            
            // PDF Generation
            const generatePdfBtn = document.getElementById('generate-pdf-btn');
            const printPrescriptionBtn = document.getElementById('print-prescription-btn');

            // Check authentication state
            auth.onAuthStateChanged(user => {
                if (user) {
                    // User is signed in
                    loginScreen.style.display = 'none';
                    appContainer.style.display = 'grid';
                    
                    // Set user info
                    userGreeting.textContent = `Olá, ${user.displayName || 'Usuário'}`;
                    if (user.photoURL) {
                        userAvatar.style.backgroundImage = `url(${user.photoURL})`;
                        userAvatar.innerHTML = '';
                    } else {
                        const initials = user.displayName ? user.displayName.charAt(0) : 'U';
                        userAvatar.textContent = initials;
                    }
                    
                    // Load initial data
                    loadDashboardData();
                    loadClients();
                    loadProducts();
                } else {
                    // User is signed out
                    loginScreen.style.display = 'flex';
                    appContainer.style.display = 'none';
                }
            });

            // Login form submission
            loginForm.addEventListener('submit', e => {
                e.preventDefault();
                const email = document.getElementById('email').value;
                const password = document.getElementById('password').value;
                
                auth.signInWithEmailAndPassword(email, password)
                    .then(userCredential => {
                        // Login successful
                    })
                    .catch(error => {
                        alert('Erro ao fazer login: ' + error.message);
                    });
            });

            // Navigation between pages
            pageLinks.forEach(link => {
                link.addEventListener('click', e => {
                    e.preventDefault();
                    const pageId = link.getAttribute('data-page');
                    
                    // Update active link
                    pageLinks.forEach(l => l.classList.remove('active'));
                    link.classList.add('active');
                    
                    // Show corresponding page
                    pageContents.forEach(content => content.style.display = 'none');
                    document.getElementById(`${pageId}-page`).style.display = 'block';
                    
                    // Update page title
                    document.querySelector('.page-title').textContent = link.querySelector('span').textContent;
                });
            });

            // Modal toggle functions
            function toggleModal(modal, show) {
                if (show) {
                    modal.classList.add('active');
                } else {
                    modal.classList.remove('active');
                }
            }

            // Add Client
            addClientBtn.addEventListener('click', () => toggleModal(clientModal, true));
            closeClientModal.addEventListener('click', () => toggleModal(clientModal, false));
            
            // Add Product
            addProductBtn.addEventListener('click', () => toggleModal(productModal, true));
            closeProductModal.addEventListener('click', () => toggleModal(productModal, false));
            
            // Add Prescription
            newPrescriptionBtn.addEventListener('click', () => {
                // Load patients for dropdown
                loadPatientsForPrescription();
                toggleModal(prescriptionModal, true);
            });
            closePrescriptionModal.addEventListener('click', () => toggleModal(prescriptionModal, false));

            // Generate PDF
            generatePdfBtn.addEventListener('click', generatePrescriptionPdf);
            printPrescriptionBtn.addEventListener('click', printPrescription);

            // Form submissions
            clientForm.addEventListener('submit', saveClient);
            productForm.addEventListener('submit', saveProduct);
            prescriptionForm.addEventListener('submit', savePrescription);

            // Data loading functions
            function loadDashboardData() {
                // In a real app, this would fetch data from Firestore
                const recentActivity = [
                    {
                        icon: 'shopping-cart',
                        title: 'Nova venda realizada',
                        description: 'Há 15 minutos - Armação Ray-Ban + Lentes Transitions'
                    },
                    {
                        icon: 'user-plus',
                        title: 'Novo cliente cadastrado',
                        description: 'Há 32 minutos - Maria Oliveira (CPF: 123.456.789-00)'
                    },
                    {
                        icon: 'calendar-alt',
                        title: 'Consulta agendada',
                        description: 'Há 1 hora - Dr. Silva para João Santos (22/05 às 14:30)'
                    },
                    {
                        icon: 'file-medical',
                        title: 'Laudo emitido',
                        description: 'Há 2 horas - Receituário para Ana Costa'
                    }
                ];

                const recentClients = [
                    {
                        name: 'Carlos Mendes',
                        cpf: '123.456.789-01',
                        lastPurchase: '20/05/2023',
                        value: 'R$ 1.250,00',
                        status: 'success'
                    },
                    {
                        name: 'Ana Costa',
                        cpf: '987.654.321-09',
                        lastPurchase: '19/05/2023',
                        value: 'R$ 890,00',
                        status: 'success'
                    },
                    {
                        name: 'João Santos',
                        cpf: '456.789.123-45',
                        lastPurchase: '18/05/2023',
                        value: 'R$ 1.750,00',
                        status: 'warning'
                    },
                    {
                        name: 'Mariana Lima',
                        cpf: '789.123.456-78',
                        lastPurchase: '15/05/2023',
                        value: 'R$ 2.300,00',
                        status: 'danger'
                    }
                ];

                // Populate recent activity
                const activityList = document.getElementById('recent-activity');
                activityList.innerHTML = '';
                recentActivity.forEach(activity => {
                    activityList.innerHTML += `
                        <li class="activity-item">
                            <div class="activity-icon">
                                <i class="fas fa-${activity.icon}"></i>
                            </div>
                            <div class="activity-details">
                                <h4 class="activity-title">${activity.title}</h4>
                                <p class="activity-time">${activity.description}</p>
                            </div>
                        </li>
                    `;
                });

                // Populate recent clients
                const clientsTable = document.getElementById('recent-clients');
                clientsTable.innerHTML = `
                    <thead>
                        <tr>
                            <th>Nome</th>
                            <th>CPF</th>
                            <th>Última Compra</th>
                            <th>Valor</th>
                            <th>Status</th>
                            <th>Ações</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${recentClients.map(client => `
                            <tr>
                                <td>${client.name}</td>
                                <td>${client.cpf}</td>
                                <td>${client.lastPurchase}</td>
                                <td>${client.value}</td>
                                <td><span class="status-badge ${client.status}">${client.status === 'success' ? 'Ativo' : client.status === 'warning' ? 'Pendente' : 'Inativo'}</span></td>
                                <td>
                                    <button class="btn btn-outline" style="padding: 6px 12px; font-size: 12px;">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                </td>
                            </tr>
                        `).join('')}
                    </tbody>
                `;
            }

            function loadClients() {
                // In a real app, this would fetch data from Firestore
                const clients = [
                    {
                        id: '1',
                        name: 'Carlos Mendes',
                        cpf: '123.456.789-01',
                        phone: '(11) 98765-4321',
                        lastVisit: '20/05/2023',
                        status: 'active'
                    },
                    {
                        id: '2',
                        name: 'Ana Costa',
                        cpf: '987.654.321-09',
                        phone: '(11) 91234-5678',
                        lastVisit: '19/05/2023',
                        status: 'active'
                    },
                    {
                        id: '3',
                        name: 'João Santos',
                        cpf: '456.789.123-45',
                        phone: '(11) 94567-8910',
                        lastVisit: '18/05/2023',
                        status: 'pending'
                    },
                    {
                        id: '4',
                        name: 'Mariana Lima',
                        cpf: '789.123.456-78',
                        phone: '(11) 92345-6789',
                        lastVisit: '15/05/2023',
                        status: 'inactive'
                    }
                ];

                const clientsTable = document.getElementById('clients-table');
                clientsTable.innerHTML = `
                    <thead>
                        <tr>
                            <th>Nome</th>
                            <th>CPF</th>
                            <th>Telefone</th>
                            <th>Última Visita</th>
                            <th>Status</th>
                            <th>Ações</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${clients.map(client => `
                            <tr>
                                <td>${client.name}</td>
                                <td>${client.cpf}</td>
                                <td>${client.phone}</td>
                                <td>${client.lastVisit}</td>
                                <td><span class="status-badge ${client.status === 'active' ? 'success' : client.status === 'pending' ? 'warning' : 'danger'}">
                                    ${client.status === 'active' ? 'Ativo' : client.status === 'pending' ? 'Pendente' : 'Inativo'}
                                </span></td>
                                <td>
                                    <button class="btn btn-outline" style="padding: 6px 12px; font-size: 12px;">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <button class="btn btn-outline" style="padding: 6px 12px; font-size: 12px; margin-left: 5px;">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </td>
                            </tr>
                        `).join('')}
                    </tbody>
                `;
            }

            function loadProducts() {
                // In a real app, this would fetch data from Firestore
                const products = [
                    {
                        id: '1',
                        code: 'ARM001',
                        name: 'Armação Ray-Ban RB2140',
                        category: 'armacao',
                        quantity: 15,
                        price: 'R$ 450,00'
                    },
                    {
                        id: '2',
                        code: 'LEN001',
                        name: 'Lente Transitions Signature',
                        category: 'lente',
                        quantity: 8,
                        price: 'R$ 650,00'
                    },
                    {
                        id: '3',
                        code: 'ARM002',
                        name: 'Armação Oakley Holbrook',
                        category: 'armacao',
                        quantity: 5,
                        price: 'R$ 380,00'
                    },
                    {
                        id: '4',
                        code: 'ACE001',
                        name: 'Kit Limpeza para Óculos',
                        category: 'acessorio',
                        quantity: 22,
                        price: 'R$ 35,00'
                    }
                ];

                // Update summary cards
                document.getElementById('total-items').textContent = products.length;
                document.getElementById('total-value').textContent = 'R$ 1.519,00'; // This would be calculated
                document.getElementById('low-stock-items').textContent = products.filter(p => p.quantity < 10).length;

                const productsTable = document.getElementById('products-table');
                productsTable.innerHTML = `
                    <thead>
                        <tr>
                            <th>Código</th>
                            <th>Produto</th>
                            <th>Categoria</th>
                            <th>Quantidade</th>
                            <th>Preço</th>
                            <th>Ações</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${products.map(product => `
                            <tr>
                                <td>${product.code}</td>
                                <td>${product.name}</td>
                                <td>${product.category === 'armacao' ? 'Armação' : product.category === 'lente' ? 'Lente' : 'Acessório'}</td>
                                <td>${product.quantity}</td>
                                <td>${product.price}</td>
                                <td>
                                    <button class="btn btn-outline" style="padding: 6px 12px; font-size: 12px;">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <button class="btn btn-outline" style="padding: 6px 12px; font-size: 12px; margin-left: 5px;">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </td>
                            </tr>
                        `).join('')}
                    </tbody>
                `;
            }

            function loadPatientsForPrescription() {
                // In a real app, this would fetch data from Firestore
                const patients = [
                    { id: '1', name: 'Carlos Mendes' },
                    { id: '2', name: 'Ana Costa' },
                    { id: '3', name: 'João Santos' },
                    { id: '4', name: 'Mariana Lima' }
                ];

                const patientSelect = document.getElementById('prescription-patient');
                patientSelect.innerHTML = '<option value="">Selecione um paciente...</option>';
                patients.forEach(patient => {
                    patientSelect.innerHTML += `<option value="${patient.id}">${patient.name}</option>`;
                });
            }

            // Form handling functions
            function saveClient(e) {
                e.preventDefault();
                // In a real app, this would save to Firestore
                alert('Cliente salvo com sucesso!');
                toggleModal(clientModal, false);
                clientForm.reset();
                loadClients();
            }

            function saveProduct(e) {
                e.preventDefault();
                // In a real app, this would save to Firestore
                alert('Produto salvo com sucesso!');
                toggleModal(productModal, false);
                productForm.reset();
                loadProducts();
            }

            function savePrescription(e) {
                e.preventDefault();
                // In a real app, this would save to Firestore
                alert('Laudo salvo com sucesso!');
                toggleModal(prescriptionModal, false);
                prescriptionForm.reset();
                // Reload prescriptions list
            }

            function generatePrescriptionPdf() {
                // In a real app, this would generate a proper PDF
                alert('PDF gerado com sucesso!');
                // Example of PDF generation with jsPDF
                const doc = new jsPDF();
                doc.text('Receita Oftalmológica', 10, 10);
                doc.text(`Paciente: ${document.getElementById('prescription-patient').selectedOptions[0].text}`, 10, 20);
                doc.text(`Data: ${document.getElementById('prescription-date').value}`, 10, 30);
                doc.text('Prescrição:', 10, 40);
                doc.text(document.getElementById('prescription-content').value, 10, 50);
                
                // In a real app, you might save this to storage or display it
                console.log('PDF generated');
            }

            function printPrescription() {
                // In a real app, this would print the prescription
                alert('Imprimindo laudo...');
                window.print();
            }

            // Responsive sidebar toggle
            function setupResponsive() {
                const sidebar = document.querySelector('.sidebar');
                const hamburger = document.createElement('div');
                hamburger.innerHTML = '<i class="fas fa-bars"></i>';
                hamburger.style.position = 'fixed';
                hamburger.style.top = '20px';
                hamburger.style.left = '20px';
                hamburger.style.zIndex = '100';
                hamburger.style.fontSize = '24px';
                hamburger.style.color = 'var(--primary)';
                hamburger.style.cursor = 'pointer';
                hamburger.style.display = 'none';
                document.body.appendChild(hamburger);
                
                function toggleSidebar() {
                    sidebar.classList.toggle('active');
                }
                
                hamburger.addEventListener('click', toggleSidebar);
                
                function checkResponsive() {
                    if (window.innerWidth <= 768) {
                        hamburger.style.display = 'block';
                        sidebar.classList.remove('active');
                    } else {
                        hamburger.style.display = 'none';
                        sidebar.classList.add('active');
                    }
                }
                
                window.addEventListener('resize', checkResponsive);
                checkResponsive();
            }

            setupResponsive();
        });
    </script>
</body>
</html>